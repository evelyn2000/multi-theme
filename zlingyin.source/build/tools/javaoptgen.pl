#!usr/bin/perl
my $jzs_config_Prj_File = $ARGV[0];
my $jzs_out_root_dir = $ARGV[1];


if($jzs_config_Prj_File && (-e $jzs_config_Prj_File)){
	&jzs_global_gen_config_java_file_entry($jzs_config_Prj_File, "");
}

my %jzs_global_config_for;
my @jzs_global_need_options = ();
my @jzs_global_integer_need_options = ();
my @jzs_global_string_need_options = ();

sub jzs_global_gen_config_java_file_entry {
	my ($config_prj_file, $config_out_root_dir) = @_;
	
	die "the file $configFile is NOT exsit\n" if ( ! -e $config_prj_file);
	#  die "the file $optrConfigFile is NOT exsit\n" if ( (! -e $optrConfigFile) && ($optrConfigFile ne "") );
	open FILE, "<$config_prj_file";
	while (<FILE>) {
		if (/^(\w+)\s*=\s*(\w+)/) {
			$jzs_global_config_for{$1} = $2;
		}
	}
	close FILE;
	
	my $pm_file_dir = $ENV{"JZS_PATH_SOURCES"}."/build/tools";
	my $framework_file_dir = $ENV{"JZS_PATH_SOURCES"}."/frameworks/share/core/java";
	if($config_out_root_dir && ($config_out_root_dir ne "")){
		$framework_file_dir = $config_out_root_dir;
	}
	
	my $input_file = "${pm_file_dir}/javaoption.pm.bool";
	open(INPUT,$input_file) or die "can not open $input_file:$!\n";
	while(<INPUT>)
	{
		chomp;
		next if(/^\#/);
		next if(/^\s*$/);
		push (@jzs_global_need_options,$1) if(/\s*(\w+)\s*/);
	}
	close INPUT;
	
	$input_file = "${pm_file_dir}/javaoption.pm.integer";
	open(INPUT,$input_file) or die "can not open $input_file:$!\n";
	while(<INPUT>)
	{
		chomp;
		next if(/^\#/);
		next if(/^\s*$/);
		push (@jzs_global_integer_need_options,$1) if(/\s*(\w+)\s*/);
	}
	close INPUT;
	
	$input_file = "${pm_file_dir}/javaoption.pm.string";
	open(INPUT,$input_file) or die "can not open $input_file:$!\n";
	while(<INPUT>)
	{
		chomp;
		next if(/^\#/);
		next if(/^\s*$/);
		push (@jzs_global_string_need_options,$1) if(/\s*(\w+)\s*/);
	}
	close INPUT;
	
	my $filedir = "${framework_file_dir}/com/jzs/utils";	
	if($config_out_root_dir && ($config_out_root_dir ne "")){
		$filedir = $framework_file_dir;
	}
	my $write_filename = "${filedir}/ConfigOption.java";
	
	#printf("file dir:".$filedir);
	system("mkdir -p ${filedir}") if ( ! -d "${filedir}");
	system("chmod u+w $write_filename") if (-e $write_filename);	
	die "can NOT open $write_filename:$!" if ( ! open OUT_FILE, ">$write_filename");
	
	&jzs_global_gen_config_java_file("com.jzs.utils");
	
	close OUT_FILE;
	
			
	if($config_out_root_dir && ($config_out_root_dir ne "")){
		$filedir = $framework_file_dir;
		$write_filename = "${filedir}/QsConfigOption.java";
	} else {
		$filedir = "${framework_file_dir}/com/qs/utils";
		$write_filename = "${filedir}/ConfigOption.java";
	}
	
	system("mkdir -p $filedir") if ( ! -d "$filedir");
	system("chmod u+w $write_filename") if (-e $write_filename);	
	die "can NOT open $write_filename:$!" if ( ! open OUT_FILE, ">$write_filename");
	
	&jzs_global_gen_config_java_file("com.qs.utils");
	
	close OUT_FILE;
}


sub jzs_global_gen_config_java_file {
	my ($config_packkage) = @_;

	print OUT_FILE "\/* generated by jz *\/\n\n";
	print OUT_FILE "package ${config_packkage};\n";
	print OUT_FILE "\n\n/**\n*  \n";	
	print OUT_FILE "* ${config_packkage}.ConfigOption \n";
	print OUT_FILE "*\n";
	print OUT_FILE "* {\@hide} \n";
	print OUT_FILE "*\/";
	print OUT_FILE "\npublic final class ConfigOption\n{\n";
	foreach my $option (@jzs_global_need_options) {
		if (($jzs_global_config_for{$option} eq "yes") or ($jzs_global_config_for{$option} eq "true")) {
			&jzs_global_gen_java_file_bool ($write_filename, $option, "true");
		}
		else
		{
			&jzs_global_gen_java_file_bool ($write_filename, $option, "false");
			# print "\"$option\" not match\n";
		}
	}
	
	foreach my $option (@jzs_global_integer_need_options) {
		if ($jzs_global_config_for{$option}) {
			&jzs_global_gen_java_file_int ($write_filename, $option, $jzs_global_config_for{$option});
		}
		else
		{
			&jzs_global_gen_java_file_int ($write_filename, $option, "0");
		}
	}
	
	foreach my $option (@jzs_global_string_need_options) {
		if ($jzs_global_config_for{$option}) {
			&jzs_global_gen_java_file_string ($write_filename, $option, $jzs_global_config_for{$option});
		}
		else
		{
			&jzs_global_gen_java_file_string ($write_filename, $option, "");
		}
	}
	
	$paramitem = uc($ENV{"QS_PRJ"});
	if($paramitem){
	#	print OUT_FILE "    public static final String Qs_Sub_Project_Name = \"$paramitem\";\n";
		print OUT_FILE "    public static final String QS_PRJ_NAME = \"$paramitem\";\n";
	}
	else{
	#	print OUT_FILE "    public static final String Qs_Sub_Project_Name = \"\";\n";
		print OUT_FILE "    public static final String QS_PRJ_NAME = \"\";\n";
	}
	
	
	
	$paramitem = uc($ENV{"QS_SUPPORT_ALL_THEME_STYLE_NAME"});
	if($paramitem && ($paramitem ne " ")){
	
		@allsupportstyles = split(",", $paramitem);
	
	# qw( iphone wphone htc megoo xiaomi samsung ihd meizu moto megoo  );
		$paramitem = uc($ENV{"QS_SUPPORT_THEME_STYLE_RES"});
		@cursupportstyles = split(/\s+/, $paramitem);
		
		my $FoundCount = 0;
		my $contentDrStyle = 0;
		foreach $sStyle (@allsupportstyles){
			my $switchStyle = jzs_global_switch_java_config_option_key($sStyle);
			my $isFound = 0;
			foreach $var (@cursupportstyles) {
				 next if ($var eq "");
				 my $switchvar = jzs_global_switch_java_config_option_key($var);
				 
				 if(($var eq $sStyle) || ($switchvar eq $switchStyle) ){
				 	$isFound = 1;
				 	if ($switchvar eq "ANDROID"){
				 		$contentDrStyle = 1;
				 	} else {
				 		$FoundCount = $FoundCount + 1;
				 	}
				 	last;
				 }
			}
	
			if($isFound > 0){
				if($switchStyle ne $sStyle){
					print OUT_FILE "    public static final boolean QS_THEME_${switchStyle} = true;\n";
				}
				print OUT_FILE "    public static final boolean QS_THEME_${sStyle} = true;\n";
			} else {
				if($switchStyle ne $sStyle){
					print OUT_FILE "    public static final boolean QS_THEME_${switchStyle} = false;\n";
				}
				if (($sStyle eq "ANDROID") && (@cursupportstyles < 1)){
					print OUT_FILE "    public static final boolean QS_THEME_${sStyle} = true;\n";
				} else {
					print OUT_FILE "    public static final boolean QS_THEME_${sStyle} = false;\n";
				}
			}
		}
	
		if($FoundCount > 0){
			print OUT_FILE "    public static final boolean QS_THEME_SUPPORT = true;\n\n\n";
		} else {
			print OUT_FILE "    public static final boolean QS_THEME_SUPPORT = false;\n\n\n";
			#if($contentDrStyle == 0){
			#	print OUT_FILE "    public static final boolean QS_THEME_ANDROID = true;\n\n\n";
			#}
		}
		
	} 
	
	$paramitem = lc($jzs_global_config_for{"QS_ENABLE_BACK_LONGPRESS_FUNC"});
	if($paramitem eq "home"){
		print OUT_FILE "    public static final int QS_ENABLE_BACK_LONGPRESS_FUNC = 1;\n";
	}
	elsif($paramitem eq "recent"){
		print OUT_FILE "    public static final int QS_ENABLE_BACK_LONGPRESS_FUNC = 2;\n";
	}
	elsif($paramitem eq "menu"){
		print OUT_FILE "    public static final int QS_ENABLE_BACK_LONGPRESS_FUNC = 3;\n";
	}
	elsif($paramitem eq "floatbar"){
		print OUT_FILE "    public static final int QS_ENABLE_BACK_LONGPRESS_FUNC = 4;\n";
	}
	else
	{
		print OUT_FILE "    public static final int QS_ENABLE_BACK_LONGPRESS_FUNC = 0;\n";
	}
	
	
	
	$paramitem = lc($jzs_global_config_for{"QS_ENABLE_MENU_KEY_LONGPRESS_FUNC"});
	if($paramitem eq "silent"){
		print OUT_FILE "    public static final int QS_ENABLE_MENU_KEY_LONGPRESS_FUNC = 1;\n";
	}
	elsif($paramitem eq "home"){
		print OUT_FILE "    public static final int QS_ENABLE_MENU_KEY_LONGPRESS_FUNC = 2;\n";
	}
	elsif($paramitem eq "recent"){
		print OUT_FILE "    public static final int QS_ENABLE_MENU_KEY_LONGPRESS_FUNC = 3;\n";
	}
	elsif($paramitem eq "floatbar"){
		print OUT_FILE "    public static final int QS_ENABLE_MENU_KEY_LONGPRESS_FUNC = 4;\n";
	}
	else{
		print OUT_FILE "    public static final int QS_ENABLE_MENU_KEY_LONGPRESS_FUNC = 0;\n";
	}
	
	
	
	$paramitem = lc($jzs_global_config_for{"QS_FAKE_DISPLAY_SIZE"});
	if($paramitem && ($paramitem ne " ")){
		my @screensize = split("x", $paramitem);
		print OUT_FILE "    public static final int QS_FAKE_DISPLAY_WIDTH_SIZE = @screensize[0];\n";
		print OUT_FILE "    public static final int QS_FAKE_DISPLAY_HEIGHT_SIZE = @screensize[1];\n";
	}else{
		print OUT_FILE "    public static final int QS_FAKE_DISPLAY_WIDTH_SIZE = 0;\n";
		print OUT_FILE "    public static final int QS_FAKE_DISPLAY_HEIGHT_SIZE = 0;\n";
	}
	
	
	print OUT_FILE "    \n \n";
	print OUT_FILE "}\n";
	

}

sub jzs_global_gen_java_file_bool {
	my ($filename, $option, $value) = @_;
	print OUT_FILE "    /**\n     * check if $option is turned on or not\n     */\n";

	print OUT_FILE "    public static final boolean ${option} = $value;\n";
#	print "public static final boolean ${option} = $value\n";

}

sub jzs_global_gen_java_file_string {
	my ($filename, $option, $value) = @_;
	print OUT_FILE "    /**\n     * check if $option is turned on or not\n     */\n";

	print OUT_FILE "    public static final String ${option} = \"$value\";\n";
#	print "public static final String ${option} = \"$value\"\n";

}

sub jzs_global_gen_java_file_int {
	my ($filename, $option, $value) = @_;
	print OUT_FILE "    /**\n     * check if $option is turned on or not\n     */\n";

	print OUT_FILE "    public static final int ${option} = $value;\n";
#	print "public static final int ${option} = $value\n";

}

sub jzs_global_switch_java_config_option_key{	
	my $var = @_[0];	
	if ($var eq "QSS3"){
		return "QISHANG";
	} elsif ($var eq "QSS4"){
		return "IPHONE";
	} elsif ($var eq "QSS5"){
		return "WPHONE";
	} elsif ($var eq "QSS6"){
		return "HTC";
	} elsif ($var eq "QSS7"){
		return "MEGOO";
	} elsif ($var eq "QSS8"){
		return "MOTO";
	} elsif ($var eq "QSS9"){
		return "MEIZU";
	} elsif ($var eq "QSS10"){
		return "XIAOMI";
	} elsif ($var eq "QSS11"){
		return "SAMSUNG";
	} elsif ($var eq "QSS12"){
		return "IHD";
	} elsif ($var eq "QSS13"){
		return "LAOREN";
	}
	
	return $var;
}



